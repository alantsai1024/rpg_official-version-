// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "層級8":
            case "層級8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles10], TileScale.Sixteen);
            case "層級1":
            case "層級1":return tiles.createTilemap(hex``, img`
. 2 . . . 2 . 2 . . . . . 2 . 2 
. 2 . 2 . 2 . 2 . 2 2 2 2 2 . 2 
. 2 . 2 . 2 . 2 . . . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . . . 2 . 2 
. 2 . 2 . . . 2 . 2 . . . 2 . 2 
. 2 . 2 . 2 . 2 . 2 2 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. . . 2 . 2 . . . . . 2 . . . 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.floorDark0,sprites.dungeon.stairLarge], TileScale.Sixteen);
            case "層級2":
            case "層級2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath7,sprites.castle.tilePath4,sprites.castle.tilePath2,sprites.castle.tilePath1,sprites.castle.tilePath3,sprites.castle.tilePath6,sprites.castle.tilePath9,sprites.castle.tilePath8,sprites.castle.tilePath5], TileScale.Sixteen);
            case "層級0":
            case "層級11":return tiles.createTilemap(hex``, img`
. . . 2 2 2 2 2 2 . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 . 2 
2 2 2 2 2 2 2 . . . . . . 2 . . 
2 2 2 . . . . 2 2 2 2 2 . 2 . 2 
. . . . 2 2 . . . . . . . 2 . 2 
. 2 2 2 2 . 2 2 2 2 2 2 2 2 . 2 
. 2 2 2 2 . 2 2 2 2 . . . 2 . 2 
. . . 2 2 . 2 2 2 2 . . . 2 . 2 
. 2 . 2 . . . . . 2 2 2 . 2 . . 
. 2 . 2 2 . 2 2 . 2 2 2 . 2 2 . 
. 2 . 2 2 . 2 2 . . . . . 2 2 . 
. 2 . 2 2 . 2 2 . . . . . 2 2 . 
. 2 . 2 2 . 2 2 . 2 2 2 2 2 2 . 
. 2 . 2 2 . 2 2 . 2 . . . . 2 . 
. 2 . 2 . . 2 2 . 2 . 2 2 2 2 . 
. 2 . . . 2 2 2 . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.dungeon.hazardLava1,sprites.dungeon.doorLockedNorth], TileScale.Sixteen);
            case "層級10":
            case "層級10":return tiles.createTilemap(hex``, img`
. . . 2 2 2 2 2 2 . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 . 2 
2 2 2 2 2 2 2 . . . . . . 2 . . 
2 2 2 . . . . 2 2 2 2 2 . 2 . 2 
. . . . 2 2 . . . . . . . 2 . 2 
. 2 2 2 2 . 2 2 2 2 2 2 2 2 . 2 
. 2 2 2 2 . 2 2 2 2 . . . 2 . 2 
. . . 2 2 . 2 2 2 2 . . . 2 . 2 
. 2 . 2 . . . . . 2 2 2 . 2 . . 
. 2 . 2 2 . 2 2 . 2 2 2 . 2 2 . 
. 2 . . 2 . 2 2 . . . . . 2 2 . 
. . 2 . 2 . 2 2 . . . . . 2 2 . 
. . 2 . 2 . 2 2 . 2 2 2 2 2 2 . 
. . 2 . 2 . 2 2 . 2 . . . . 2 . 
. . 2 . 2 . 2 2 . 2 . 2 2 2 2 . 
. . 2 . . . 2 2 . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.dungeon.hazardLava1,sprites.dungeon.doorLockedNorth,sprites.dungeon.hazardLava0], TileScale.Sixteen);
            case "層級4":
            case "層級3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath1,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tilePath4,sprites.castle.tilePath7,sprites.castle.tilePath3,sprites.castle.tilePath6,sprites.castle.tilePath9,sprites.castle.tilePath5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
